window.storyFormat({
    "name": "CopyPaste",
    "version": "1.1.6",
    "url": "https://github.com/cocoknightcom/CopyPaste",
    "author": "cocoknightcom",
    "description": "A Twine 2 Proofing Story Format that cuts it. Exclude passages with a TODO tag.",
    "license": "MIT",
    "image": "icon.svg",
    "proofing": true,
    "source": "<!doctype html>\n\n<html>\n<head>\n  <meta charset=\"utf-8\">\n\n  <title>{{STORY_NAME}}</title>\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no\" />\n  <style>\nhtml, body, .container {\n\tcolor: #303030;\n\tfont-family: 'SF Pro', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n\tfont-size: 15px;\n\tmargin: 0;\n\tpadding: 0;\n}\n.container {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: #e6e7f0 url('cC2560x1440closer.jpg') no-repeat 50% 0%;\n  background-size: poster;\n}\n.wrapper {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  min-width: 50%;\n  max-width: 90%;\n  margin: 4% 0;\n  background-color: rgb(255,255,255,.5);\n\n}\n.content {\n  text-align: left;\n}\nh1 {\n\tmargin-top: 15px;\n\tfont-size: 19px;\n\tmargin-bottom: 30px;\n}\nh2 {\n\tfont-weight: normal;\n}\nh3 {\n\tmargin-top: -15px;\n\tpadding-bottom: 2%;\n\tfont-weight: normal;\n}\nh4 {\n\tfont-size: 19px;\n\tfont-weight: normal;\n}\na {\n\tcolor: rgb(46, 87, 224);\n}\na.btn {\n\tpadding: 10px 20px;\n\tcolor: white;\n\tbackground-color: rgb(46, 114, 224);\n\ttext-decoration: none;\n}\nh1, h2, h3, h4, p, tw-passagedata {\n    padding: 0 20% 2% 20%;\n}\n@media (min-width: 481px) and (max-width: 767px) {\n\th1, h2, h3, h4, p, tw-passagedata {\n\t  padding: 0 5% 2% 5%;\n\t}\n}\n@media (min-width: 320px) and (max-width: 480px) {\n\th1, h2, h3, h4, p, tw-passagedata {\n\t  padding: 0 5% 2% 5%;\n\t}\n}\n</style>\n\n</head>\n\n<body>\n    <div class=\"container\">\n        <div class=\"wrapper\">\n            <div class=\"content\">\n                <h1># {{STORY_NAME}}</h1>\n            </div>\n        </div>\n    </div>\n    {{STORY_DATA}}\n    <script>\ndocument.addEventListener('DOMContentLoaded', function () {\n    // Create a fun toggle button\n    var toggleButton = document.createElement('div');\n    toggleButton.style.position = 'fixed';\n    toggleButton.style.top = '10px';\n    toggleButton.style.right = '10px';\n    toggleButton.style.width = '40px';\n    toggleButton.style.height = '20px';\n    toggleButton.style.borderRadius = '10px';\n    toggleButton.style.backgroundColor = '#ccc';\n    toggleButton.style.cursor = 'pointer';\n\n    // Create the switch handle\n    var switchHandle = document.createElement('div');\n    switchHandle.style.width = '18px';\n    switchHandle.style.height = '18px';\n    switchHandle.style.borderRadius = '50%';\n    switchHandle.style.backgroundColor = '#fff';\n    switchHandle.style.position = 'relative';\n    switchHandle.style.left = '2px';\n    switchHandle.style.transition = 'transform 0.3s ease-in-out';\n\n    // Append the handle to the button\n    toggleButton.appendChild(switchHandle);\n\n    document.body.appendChild(toggleButton);\n\n    // Function to toggle elements based on 'tags' attribute\n    function toggleElements(isTodo) {\n        // Remove existing h2 and p elements\n        document.querySelectorAll('.content h2, .content p').forEach(function (element) {\n            element.parentNode.removeChild(element);\n        });\n\n        // Iterate over tw-passagedata elements\n        var passages = document.querySelectorAll('tw-passagedata');\n        passages.forEach(function (passage) {\n            var passageTags = passage.getAttribute('tags');\n\n            // Check if the passage should be included based on 'tags' attribute\n            if ((isTodo && passageTags && passageTags.includes('TODO')) || (!isTodo && (!passageTags || !passageTags.includes('TODO')))) {\n                // Get the 'name' attribute value\n                var passageName = passage.getAttribute('name');\n\n                // Replace plain text line breaks with HTML line breaks\n                var passageContent = passage.textContent.replace(/\\n/g, '<br>');\n\n                // Create an h2 element\n                var h2 = document.createElement('h2');\n                h2.textContent = '## ' + passageName;\n\n                // Create a new p element\n                var p = document.createElement('p');\n                p.innerHTML = passageContent;\n\n                // Get the 'content' div\n                var contentDiv = document.querySelector('.content');\n\n                // Append the h2 and p elements to the 'content' div\n                contentDiv.appendChild(h2);\n                contentDiv.appendChild(p);\n            }\n        });\n    }\n\n    // Initial execution\n    toggleElements(false);\n\n    // Add click event listener to the toggle button\n    toggleButton.addEventListener('click', function () {\n        // Toggle elements based on 'tags' attribute\n        var isTodo = toggleButton.dataset.isTodo === 'true';\n        toggleElements(!isTodo);\n\n        // Update the dataset attribute for the next toggle\n        toggleButton.dataset.isTodo = (!isTodo).toString();\n\n        // Move the switch handle to the new position\n        switchHandle.style.transform = isTodo ? 'translateX(0)' : 'translateX(20px)';\n    });\n});\n\n</script>\n</body>\n</html>"
});